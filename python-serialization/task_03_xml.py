import xml.etree.ElementTree as ETdef serialize_to_xml(dictionary, filename):  """Serializes a Python dictionary to XML and saves it to a file.  Args:    dictionary: The Python dictionary to serialize.    filename: The filename to save the XML data.  """  root = ET.Element("data")  for key, value in dictionary.items():    element = ET.SubElement(root, key)    element.text = str(value)  # Ensure value is a string for XML  with open(filename, 'wb') as f:    ET.indent(root, space="\t", level=0)  # Indent for readability    ET.ElementTree(root).write(f, encoding='utf-8')  print(f"Dictionary serialized to {filename}")def deserialize_from_xml(filename):  """Deserializes XML data from a file to a Python dictionary.  Args:    filename: The filename containing the XML data.  Returns:    A Python dictionary reconstructed from the XML data.  """  try:    tree = ET.parse(filename)    root = tree.getroot()    data = {}    for child in root:      data[child.tag] = child.text    return data  except FileNotFoundError:    print(f"Error: File '{filename}' not found.")    return Noneif __name__ == "__main__":  # ... Your sample data and usage here (optional)  pass
